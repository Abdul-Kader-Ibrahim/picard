package picard.sam.SamErrorMetric;

import htsjdk.samtools.reference.SamLocusAndReferenceIterator;
import htsjdk.samtools.util.SamLocusIterator;

/**
 * A calculator that estimates the error rate of the bases it observes for indels only.
 * Created by jonn on 6/13/19.
 */
public class IndelErrorCalculator extends BaseErrorCalculator {
    /**
     * Total number of inserts
     */
    protected long nInserts;

    /**
     * Total number of deletions
     */
    protected long nDeletions;

    @Override
    public void addBase(final SamLocusIterator.RecordAndOffset recordAndOffset, final SamLocusAndReferenceIterator.SAMLocusAndReference locusAndRef, CollectSamErrorMetrics.BaseOperation operation) {
        super.addBase(recordAndOffset, locusAndRef, operation);

        if(operation == CollectSamErrorMetrics.BaseOperation.Insertion) {
            nInserts += 1;
        }
        else if (operation == CollectSamErrorMetrics.BaseOperation.Deletion) {
            nDeletions += 1;
        }
    }

    @Override
    public void addBase(final SamLocusIterator.RecordAndOffset recordAndOffset, final SamLocusAndReferenceIterator.SAMLocusAndReference locusAndRef) {
        addBase(recordAndOffset, locusAndRef, CollectSamErrorMetrics.BaseOperation.Match);
    }

    /**
     * The suffix that pertains to the implementation of aggregation
     **/
    @Override
    public String getSuffix() {
        return "indel_error";
    }

    /**
     * Returns the metric generated by the observed loci
     **/
    @Override
    public IndelErrorMetric getMetric() {
        return new IndelErrorMetric("", nBases, nInserts, nDeletions);
    }
}
